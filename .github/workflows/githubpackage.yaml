name: githubpackage demo
on:   
  push:
    # Publish `master` as Docker `latest` image
    branches:
      - master

    # Publish `v1.2.3` tags as releases
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
permissions: read-all|write-all

env:
  IMAGE_NAME: gitops-argocd

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run:  docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
        

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo $VERSION
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          docker tag $IMAGE_NAME $IMAGE_ID:${GITHUB_REF##*/}-$git_hash 
          docker push $IMAGE_ID:${GITHUB_REF##*/}-$git_hash

      - uses: actions/checkout@v3
        with:
          repository: abhishakeonteddu/gitopps_repo
          path: gitopps_repo         
          token: ${{secrets.GITHUB_TOKEN}}

      - name: updated version in values.yaml
        env:
          REPO_KEY: ${{secrets.GITHUB_TOKEN}}
          USERNAME: github-actions[bot]       
        run: |
           cd ./gitopps_repo/charts/helm-example/
           ls -lrt
           git_hash=$(git rev-parse --short "$GITHUB_SHA")
           version=$(cat values.yaml | grep version: | awk '{print $2}')
           sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" values.yaml
           git config --local user.name "github-actions[bot]"
           git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
           git add -A
           git commit -m "Documentation update"
           git push https://$USERNAME:$REPO_KEY@github.com/abhishakeonteddu/gitopps_repo.git
         
