# This is a basic workflow to help you get started with Actions

name: build_from_tag

on:  
  push:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-of-specific-tags-occurs
    tags: [ "v*.*.*" ]
    
jobs:
  build:
    name: Build and Pushing the Image
    runs-on: ubuntu-latest

    steps:
    - name: Github variables
      run: |
        echo github.event.ref: ${{ github.event.ref }}
        echo github.ref_type: ${{ github.ref_type }}
        echo github.ref_name: ${{ github.ref_name }}
        echo github.sha: ${{ github.sha }}
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 712324673482.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: gitops-argocd

      run: |
        # Build a docker container and push it to ECR
        docker image build \
          --build-arg VERSION=${{ github.ref_name }} \
          --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.ref_name }} .
        #  --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest .
        
        #git_hash=$(git rev-parse --short "$GITHUB_SHA")
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash .
        echo "Pushing image to ECR..."
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.ref_name }}
        #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}-$git_hash"
        
    - name: Update Version
      run: |
          #git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version=$(cat ./charts/helm-example/values.yaml | grep version: | awk '{print $2}')
          sed -i "${{ github.ref_name }}" ./charts/helm-example/values.yaml
          
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@v0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Version updated
